---
import Navigation from '../components/Navigation.astro';
import { translations } from '../i18n/translations';
import { defaultLang } from '../i18n/defaultLang';
import SectionMain from '../components/sections/SectionMain.astro';
import SectionIntro from '../components/sections/SectionIntro.astro';
import SectionSchedule from '../components/sections/SectionSchedule.astro';
import SectionDressCode from '../components/sections/SectionDressCode.astro';
import SectionNotes from '../components/sections/SectionNotes.astro';
import SectionRSVP from '../components/sections/SectionRSVP.astro';
import SectionLocation from '../components/sections/SectionLocation.astro';
import SectionAccommodation from '../components/sections/SectionAccommodation.astro';
import SectionCountdown from '../components/sections/SectionCountdown.astro';

type SupportedLanguages = keyof typeof translations;
const { lang = defaultLang } = Astro.props;
const t = translations[lang as SupportedLanguages];
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>{t['meta.title'] || 'Boda Luard y Nataly'}</title>
    <meta property="og:title" content={t['meta.og.title'] || 'EL BODORRIO 2025 !'}/>
    <meta property="og:description" content={t['meta.og.description'] || 'Boda Luard y Nataly. Acompañanos en el inicio de nuestra nueva historia.'}/>
    <!--<meta property="og:image" content="/images/couple-wedding.webp"/> -->
    <meta property="og:image" content="/images/couple.webp"/>
    <meta property="og:url" content="elbodorrio2025.com" />
    <meta property="og:type" content="website" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/favicon.ico" sizes="any">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" href="/favicon.png">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Great+Vibes&family=Lato:wght@300;400;700&display=swap" rel="stylesheet">
  </head>
  <body>
    <Navigation lang={lang}/>
    <div id="envelope-container" class="envelope-container">
      <div class="envelope">
        <div class="envelope-flap" />
        <div class="envelope-flap-shadow" />
        <div class="envelope-inside">
          <div id="envelope-content-preview" class="envelope-content-preview">
            <div class="section preview-section"><SectionMain lang={lang} /></div>
            <!--<slot /> -->
          </div>
        </div>
        <div class="envelope-seal" id="envelope-seal">
          <div class="seal-content">
            <img src="/images/LN-logo.png" alt="L&N" class="seal-logo">
          </div>
        </div>
        <div class="envelope-outside" />
      </div>
    </div>
    <div id="invitation-content" class="invitation-content hidden">
      <div class="section" id="main">
        <SectionMain lang={lang} class="section"/>
      </div>
      <div class="section" id="intro">
        <SectionIntro lang={lang} class="section"/>
      </div>
      <div class="section" id="countdown">
        <SectionCountdown lang={lang} class="section"/>
      </div>
      <div class="section" id="info">
        <SectionLocation lang={lang}/>
      </div>
      <div class="section" id="schedule">
        <SectionSchedule lang={lang}/>
      </div>
      <div class="section" id="dress-code">
        <SectionDressCode lang={lang}/>
      </div>
      <div class="section" id="notes">
        <SectionNotes lang={lang}/>
      </div>
      <div class="section" id="accommodation">
        <SectionAccommodation lang={lang}/>
      </div>
      <div class="section" id="rsvp">
        <SectionRSVP lang={lang}/>
      </div>
      <!--<slot /> -->
    </div>
  </body>
</html>


<script>
  document.addEventListener('DOMContentLoaded', () => {
    const envelope = document.querySelector('.envelope');
    const envelopeContainer = document.getElementById('envelope-container');
    const invitationContent = document.getElementById('invitation-content');
    const envelopeContentPreview = document.getElementById('envelope-content-preview');
    const envelopeInside = document.querySelector('.envelope-inside');
    const envelopeSeal = document.getElementById('envelope-seal');
    
    // Check URL hash to determine initial state
    const urlHash = window.location.hash.toLowerCase();
    const shouldOpenDirectly = urlHash === '#open';
    
    // Ensure content is initially hidden
    if (envelopeContentPreview) {
      envelopeContentPreview.style.opacity = '0';
    }
    
    // Function to handle envelope opening animation
    const openEnvelope = () => {
      // Disable pointer events during animation
      if (envelopeSeal) {
        envelopeSeal.style.pointerEvents = 'none';
      }
      
      // Añadir efecto de "crack" al sello cuando se hace clic
      if (envelopeSeal) {
        envelopeSeal.style.transition = 'all 0.3s cubic-bezier(0.36, 0.07, 0.19, 0.97)';
        envelopeSeal.style.transform = 'translate(-50%, -50%) scale(0.95) rotate(5deg)';
        
        // Añadir efecto de "brillo" al romper el sello
        setTimeout(() => {
          envelopeSeal.style.boxShadow = '0 0 30px rgba(122, 138, 158, 0.8), inset 0 0 20px rgba(255, 255, 255, 0.8)';
        }, 300);
      }
      
      if(!envelope) return;
      // Use a small timeout to ensure browser has time to process
      setTimeout(() => {
        // First open the flap
        envelope.classList.add('opening');
        
        // Gradually reveal content as flap opens
        setTimeout(() => {
          if (envelopeContentPreview) {
            envelopeContentPreview.style.opacity = '0.3';
          }
          
          // Ensure the inside element gets proper z-index
          if (envelopeInside) {
            envelopeInside.style.zIndex = '2';
          }
          
          // Then pull out the content after flap opens
          setTimeout(() => {
            envelope.classList.add('open');
            
            // Increase z-index as content is pulled out
            if (envelopeInside) {
              envelopeInside.style.zIndex = '4';
            }
            
            // After animation completes, show the actual content
            setTimeout(() => {
              if (envelopeContainer && invitationContent) {
                // Prepare for paper slide-in animation
                invitationContent.classList.remove('hidden');
                invitationContent.style.display = 'block';
                invitationContent.style.opacity = '0';
                invitationContent.style.transform = 'translateY(100%)';
                invitationContent.style.position = 'fixed';
                invitationContent.style.top = '0';
                invitationContent.style.left = '0';
                invitationContent.style.width = '100%';
                invitationContent.style.height = '100%';
                invitationContent.style.zIndex = '1001';
                invitationContent.style.transition = 'opacity 0.5s ease, transform 1.2s cubic-bezier(0.22, 1, 0.36, 1)';
                
                // Remove envelope with upward animation
                envelopeContainer.style.transition = 'transform 1s ease, opacity 0.8s ease';
                envelopeContainer.style.transform = 'translateY(-100%)';
                envelopeContainer.style.opacity = '0';
                
                // Short delay before sliding in the content from bottom
                setTimeout(() => {
                  // Slide in the content from bottom with paper-like effect
                  invitationContent.style.opacity = '1';
                  invitationContent.style.transform = 'translateY(0)';
                  invitationContent.classList.add('paper-effect');
                  
                  // Add staggered animation to child elements
                  const children = invitationContent.children;
                  for (let i = 0; i < children.length; i++) {
                    children[i].style.setProperty('--delay', i);
                  }
                  
                  // Remove the envelope container after animation completes
                  setTimeout(() => {
                    envelopeContainer.remove();
                    
                    // Reset to normal document flow after animation
                    setTimeout(() => {
                      invitationContent.style.position = 'static';
                      invitationContent.style.height = 'auto';
                      invitationContent.style.overflow = 'visible';
                      document.body.style.overflow = 'auto';
                      document.body.style.height = 'auto';
                      document.body.style.overflowX = 'hidden';
                      invitationContent.style.overflowX = 'hidden';
                      const navElement = document.querySelector('nav');
                      const navToggle = document.querySelector('.nav-toggle');
                      if (navElement) {
                        navToggle?.classList.remove('hidden');

                        let isMobile = window.innerWidth <= 768;
                        if (isMobile) {
                          navToggle?.classList.remove('active');
                        } else {
                          navElement?.classList.add('visible');
                          navToggle?.classList.add('active');
                        }
                      }
                      
                      // Update URL hash if it wasn't already set
                      if (window.location.hash !== '#open') {
                        history.replaceState(null, null, '#open');
                      }
                    }, 500);
                  }, 800);
                }, 800);
              }
            }, 2300);
          }, 1500);
        }, 700);
      }, 50);
    };
    
    // If URL has #open, skip envelope animation and show content directly
    if (shouldOpenDirectly) {
      // Hide envelope container and show content immediately
      if (envelopeContainer && invitationContent) {
        envelopeContainer.style.display = 'none';
        invitationContent.classList.remove('hidden');
        invitationContent.style.display = 'block';
        invitationContent.style.opacity = '1';
        invitationContent.style.position = 'static';
        invitationContent.style.height = 'auto';
        invitationContent.style.overflow = 'visible';
        invitationContent.style.overflowX = 'hidden';
        document.body.style.overflow = 'auto';
        document.body.style.overflowX = 'hidden';
        document.body.style.height = 'auto';
        invitationContent.style.opacity = '1';
        invitationContent.style.transform = 'translateY(0)';
        invitationContent.classList.add('paper-effect');
        // Add staggered animation to child elements
        const children = invitationContent.children;
        const navElement = document.querySelector('nav');
        const navToggle = document.querySelector('.nav-toggle');
        if (navElement) {
          navToggle?.classList.remove('hidden');

          let isMobile = window.innerWidth <= 768;
          if (isMobile) {
            navToggle?.classList.remove('active');
          } else {
            navToggle?.classList.add('active');
          }
        }
        for (let i = 0; i < children.length; i++) {
          children[i].style.opacity = '1';
          children[i].style.transform = 'translateY(0)';
        }
      }
    } else {
      // Add subtle animation to the seal to draw attention
      if (envelopeSeal) {
        setTimeout(() => {
          envelopeSeal.classList.add('pulse');
          
        }, 1000);
      }

      // Make only the seal clickable
      envelope.style.pointerEvents = 'none';
      if (envelopeSeal) {
        envelopeSeal.style.pointerEvents = 'auto';
        envelopeSeal.style.cursor = 'pointer';
        
        envelopeSeal.addEventListener('click', openEnvelope);
      }
    }
    
    // Listen for hash changes to handle dynamic state changes
    window.addEventListener('hashchange', () => {
      const newHash = window.location.hash.toLowerCase();
      
      if (newHash === '#open' && envelopeContainer && envelopeContainer.style.display !== 'none') {
        // If changing to #open and envelope is still visible, trigger opening
        openEnvelope();
      } else if (newHash === '#close' && (!envelopeContainer || envelopeContainer.style.display === 'none')) {
        // If changing to #close and envelope is not visible, reload page to reset state
        window.location.reload();
      }
    });
  });
</script>

<style is:global>
  @font-face {
    font-family: 'Better Saturday Personal Use';
    src: url('/fonts/BetterSaturday.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Great Vibes';
    src: url('/fonts/GreatVibes-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Italiana';
    src: url('/fonts/Italiana-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  @font-face {
    font-family: 'Eyesome';
    src: url('/fonts/eyesome-duo-script.otf') format('opentype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  :root {
    --primary-color: #B8C4D0; /* Azul grisáceo claro */
    --secondary-color: #7A8A9E; /* Azul grisáceo medio */
    --text-color: #4A4A4A; /* Gris oscuro para texto */
    --background-color: #F9F9F9; /* Fondo blanco ligeramente grisáceo */
    --envelope-color: #D6DFE8; /* Azul muy claro para el sobre */
    --envelope-border: #A9B7C6; /* Borde azul grisáceo claro */
    --envelope-shadow: rgba(122, 138, 158, 0.3); /* Sombra azul grisáceo */
    --seal-color: #7A8A9E; /* Azul grisáceo para el sello */
    --seal-shadow: rgba(74, 74, 74, 0.4); /* Sombra gris */
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    font-family: 'Lato', sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    overflow-x: hidden;
  }

  body {
    overflow-x: hidden;
  }

  h1, h2 {
    font-family: 'Better Saturday Personal Use', cursive;
  }

  /* Envelope Styles */
  .envelope-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    background: linear-gradient(to bottom, #F9F9F9, #D6DFE8);
    perspective: 2000px;
    background-image: 
      url("/images/rose-draw.svg"),
      url("/images/rose-draw.svg"),
      url("/images/rose-draw.svg"),
      url("/images/rose-draw.svg");
      background-size: 
      100px 100px,
      80px 80px,
      120px 120px,
      90px 90px;
    background-position: 
      0% 0%,
      25% 25%,
      50% 50%,
      75% 75%;
    background-repeat: space;
    background-position: center;
    transform: rotate(0deg);
  }

  .envelope-container::before {
    content: '';
    position: absolute;
    bottom: -30vh;
    left: -10vh;
    width: 70vw;
    height: 70vw;
    max-width: 1200px;
    max-height: 1200px;
    background-image: url("/images/rose.webp");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: bottom left;
    z-index: 2;
    opacity: 0.8;
    pointer-events: none;
    transform: rotate(30deg);
  }

  .envelope-container::after {
    content: '';
    position: absolute;
    top: -80vh;
    right: -50vh;
    width: 70vw;
    height: 70vw;
    max-width: 1200px;
    max-height: 1200px;
    background-image: url("/images/rose.webp");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: top right;
    z-index: 2;
    opacity: 0.8;
    transform: rotate(-150deg);
    pointer-events: none;
  }  

  .preview-section {
    top:-10vh;
  }
  .preview-section h1 {
    font-size: 6rem;
  }

  .invitation-content .section {
    position: relative;
  }

  .invitation-content .section::after {
    content: '';
    position: absolute;
    bottom: -50px;
    left: 0;
    width: 70vw;
    height: 70vw;
    max-width: 1200px;
    max-height: 1200px;
    background-image: url("/images/rose.webp");
    background-size: 80px 80px;
    background-repeat: no-repeat;
    background-position: center center;
    opacity: 0.3;
    pointer-events: none;
    z-index: 1;
  }

  .invitation-content .section:nth-of-type(odd)::after {
    opacity: 0.2;
    top: -60%;
    left: -15%;
    background-image: url("/images/rose.webp");
    background-size: contain;
    background-repeat: no-repeat;
    width: 100vw;
    height: 100vw;
    max-width: 1200px;
    max-height: 1200px;
    transform: rotate(-180deg);
  }

  .invitation-content .section:nth-of-type(even)::after {
    opacity: 0.2;
    top: -70%;
    left: 50%;
    background-image: url("/images/rose.webp");
    background-size: contain;
    background-repeat: no-repeat;
    width: 100vw;
    height: 100vw;
    max-width: 1200px;
    max-height: 1200px;
    transform: rotate(-180deg);
  }

  /* Añadir decoraciones adicionales en los laterales de algunas secciones */
  /*
  .invitation-content .section:nth-child(3n)::before {
    content: '';
    position: absolute;
    top: 50%;
    right: 30px;
    width: 70vw;
    height: 70vw;
    max-width: 1200px;
    max-height: 1200px;
    background-image: url("/images/rose.webp");
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.2;
    transform: translateY(-50%);
    pointer-events: none;
    z-index: 0;
  }

  .invitation-content .section:nth-child(3n+1)::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 70vw;
    height: 70vw;
    max-width: 1200px;
    max-height: 1200px;
    background-image: url("/images/rose.webp");
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.2;
    pointer-events: none;
    z-index: 0;
  }
  */

  @media (max-width: 768px) {
    .envelope-container::before {
      width: 120vw;
      height: 120vw;
      bottom: -15vh;
      left: -25vw;
    }
    
    .envelope-container::after {
      width: 120vw;
      height: 120vw;
      top: -55vh;
      right: -50vw;
    }

    .preview-section {
      top: -20vh;
    }
    .preview-section h1 {
      font-size: 3rem;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .envelope-container::before {
      width: 120vw;
      height: 120vw;
      bottom: -20vh;
      left: -15vw;
    }
    
    .envelope-container::after {
      width: 120vw;
      height: 120vw;
      top: -60vh;
      right: -40vw;
    }
  }

  @media (min-width: 769px) and (max-width: 1366px) and (orientation: landscape) {
    .envelope-container::before {
      width: 80vw;
      height: 80vw;
      bottom: -40vh;
      left: -10vw;
    }
    
    .envelope-container::after {
      width: 80vw;
      height: 80vw;
      top: -90vh;
      right: -35vw;
    }
  }


  @media (max-width: 896px) and (max-height: 414px) and (orientation: landscape)  {
    .envelope-container::before {
      width: 90vw;
      height: 90vw;
      bottom: -40vh;
      left: -20vw;
      opacity: 0.6;
    }
    
    .envelope-container::after {
      width: 90vw;
      height: 90vw;
      top: -120vh;
      right: -40vw;
    }
  }

  @media (max-width: 480px) {
    .envelope-container::before {
      width: 140vw;
      height: 140vw;
      bottom: -15vh;
      left: -30vw;
    }
    
    .envelope-container::after {
      width: 140vw;
      height: 140vw;
      top: -50vh;
      right: -60vw;
    }
  }

  .envelope {
    position: relative;
    width: 50%;
    max-width: 800px;
    height: 40vh;
    max-height: 600px;
    background-color: var(--envelope-color);
    border: 2px solid var(--envelope-border);
    border-radius: 8px;
    box-shadow: 0 15px 35px var(--envelope-shadow), inset 0 0 80px rgba(255, 255, 255, 0.2);
    cursor: pointer;
    overflow: visible;
    transition: transform 0.5s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    transform-style: preserve-3d;
  }

  .envelope-seal {
    position: absolute;
    top: 47%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 25vw;
    height: 25vw;
    max-width: 130px;
    max-height: 130px;
    background: radial-gradient(circle at center, #A9B7C6 0%, #8A9AAF 30%, #7A8A9E 70%, #5A6A7E 100%); /* Tonos de azul grisáceo */
    border-radius: 50%;
    border-color: #5A6A7Eb2; /* Azul grisáceo más oscuro */
    border-style: solid;
    border-width: 5px;
    z-index: 99;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), inset 0 2px 5px rgba(255, 255, 255, 0.2);
    transition: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    cursor: pointer;
    /* Textura actualizada para el sello */
    background-image: 
      radial-gradient(circle at 30% 30%, #B8C4D0 0%, transparent 40%),
      radial-gradient(circle at 70% 70%, #7A8A9E 0%, transparent 40%),
      repeating-radial-gradient(circle at 50% 50%, #8A9AAF, #8A9AAF 5px, #7A8A9E 5px, #7A8A9E 10px);
    /* Efecto de irregularidad en los bordes */
    filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
  }

  /* Añadir textura de cera con pseudo-elementos */
  .envelope-seal::after {
    content: '';
    position: absolute;
    top: 5px;
    left: 5px;
    right: 5px;
    bottom: 5px;
    background: 
      radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.3) 0%, transparent 20%),
      radial-gradient(circle at 60% 60%, rgba(0, 0, 0, 0.2) 0%, transparent 20%);
    border-radius: 50%;
    z-index: 1;
    opacity: 0.9;
    /* Simular imperfecciones de la cera */
    background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.05' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100' height='100' filter='url(%23noise)' opacity='0.3'/%3E%3C/svg%3E");
    pointer-events: none;
  }

  .envelope-seal::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    opacity: 0.7;
    background-color: #7A8A9E;
    /* Simular gotas de cera */
    background-image: 
      radial-gradient(circle at 20% 80%, #8A9AAF 0%, transparent 15%),
      radial-gradient(circle at 80% 20%, #8A9AAF 0%, transparent 15%);
    filter: blur(1px);
    pointer-events: none;
  }

  .envelope-seal:hover {
    transform: translate(-50%, -50%) scale(1.05);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.6), inset 0 2px 8px rgba(255, 255, 255, 0.3);
  }

  .envelope.opening .envelope-seal {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.2) rotate(45deg);
    transition: all 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    box-shadow: 0 0 30px rgba(122, 138, 158, 0.8), inset 0 0 10px rgba(255, 255, 255, 0.5);
    background-color: #5A6A7E;
  }

  /* Añadir media queries para dispositivos móviles */
  @media (max-width: 768px) {
    .envelope {
      width: 85%;
      height: 35vh;
    }
    
    .envelope-seal {
      width: 100px;
      height: 100px;
    }
    
    .seal-content {
      font-size: 1.8rem;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .envelope {
      width: 85%;
      height: 35vh;
    }
    
    .envelope-seal {
      width: 100px;
      height: 100px;
    }
    
    .seal-content {
      font-size: 1.8rem;
    }
  }

  @media (max-width: 768px) and (orientation: landscape) {
    .envelope {
      width: 65%;
      height: 70vh;
      max-height: 280px;
    }
    .envelope-seal {
      width: 90px;
      height: 90px;
    }
    
    .seal-content {
      font-size: 1.6rem;
    }
  }


  @media (max-width: 896px) and (max-height: 414px) and (orientation: landscape)  {
    .envelope {
      width: 65%;
      height: 70vh;
      max-height: 280px;
    }
    .envelope-seal {
      width: 25vw;
      height: 25vw;
    }
    
    .seal-content {
      font-size: 1.6rem;
    }
  }

  @media (min-width: 769px) and (max-width: 1366px) and (orientation: landscape) {
    .envelope {
      width: 40%;
      height: 40vh;
    }
    
    .envelope-seal {
      width: 10vw;
      height: 10vw;
    }
    
    .seal-content {
      font-size: 1.2rem;
    }
  }
  
  @media (max-width: 480px) {
    .envelope {
      width: 80%;
      height: 30vh;
    }
    
    .envelope-seal {
      width: 25vw;
      height: 25vw;
    }
    
    .seal-content {
      font-size: 1.3rem;
    }
  }

  .envelope::before {
    content: '';
    position: absolute;
    top: 10px;
    left: 10px;
    right: 10px;
    bottom: 10px;
    border: 1px solid rgba(201, 177, 140, 0.3);
    border-radius: 5px;
    pointer-events: none;
  }

  .envelope-flap {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background-color: #C6D1DE;
      clip-path: polygon(0 0, 50% 100%, 100% 0);
      border-bottom: 2px solid var(--envelope-border);
      transform-origin: top;
      transform: rotateX(0deg);
      transition: transform 2.5s cubic-bezier(0.33, 1, 0.68, 1);
      z-index: 7;
      transform-style: preserve-3d;
      backface-visibility: visible;
      background-image: 
        linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent),
        url("/images/rose-draw.svg"),
        url("/images/rose-draw.svg");
      background-size: 
        110px 110px,
        70px 70px;
      background-position: 
        50% 20%,
        20% 80%;
      background-repeat: space;
      transform: rotate(0deg);
    }
    .envelope-flap-shadow {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      clip-path: polygon(100% 0, 100% 5%, 50% 105%, 0 5%, 0 0);
      transform-origin: top;
      transition: transform 2.5s cubic-bezier(0.33, 1, 0.68, 1);
      transform: rotateX(0deg);
      z-index: 6;
      transform-style: preserve-3d;
      backface-visibility: visible;
      background-color: var(--envelope-border);
      filter: blur(10px);
    }
    

  @keyframes openFlap {
    0% { 
      transform: rotateX(0deg); 
    }
    100% { 
      transform: rotateX(180deg) translateZ(1px); 
    }
  }


  .envelope-flap.wiggle .envelope-flap-shadow.wiggle {
    animation: wiggleFlap 1s ease;
  }

  @keyframes wiggleFlap {
    0% { transform: rotateX(0deg); }
    25% { transform: rotateX(15deg); }
    50% { transform: rotateX(0deg); }
    75% { transform: rotateX(5deg); }
    100% { transform: rotateX(0deg); }
  }

  .envelope.opening .envelope-flap {
    transform: rotateX(180deg) translateZ(1px);
  }

  .envelope.opening .envelope-flap-shadow {
    transform: rotateX(180deg) translateZ(1px);
  }

  .envelope-outside{
    position: absolute; 
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--envelope-color);
    width: 100%;
    height: 100%;
    z-index: 5;
    clip-path: polygon(50% 50%, 100% 0, 100% 100%, 0 100%, 0 0);
    position: relative;

    background-image: 
      linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent),
      linear-gradient(-45deg, rgba(0, 0, 0, 0.03) 25%, transparent 25%, transparent 50%, rgba(0, 0, 0, 0.03) 50%, rgba(0, 0, 0, 0.03) 75%, transparent 75%, transparent);
    background-size: 50px 50px;
  }

  .envelope-outside::after {
    content: '';
    position: absolute;
    filter: blur(25px) saturate(1.5);
    left: 0;
    width: 100%;
    height: 100%;
    scale: 1.05;
    z-index: -1;
  }

  .envelope-inside {
    position: absolute;
    bottom: 50%;
    left: 50%;
    transform: translateX(-50%); /* Only transform X, not Y */
    width: 95%;
    height: 0; /* Start with zero height */
    background-color: white;
    z-index: 4;
    display: flex;
    justify-content: center;
    align-items: flex-end; /* Align content to bottom */
    overflow: hidden;
    opacity: 0;
    transition: opacity 0.5s ease;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 15px rgba(0, 0, 0, 0.1);
    transform-origin: center bottom; /* Origin at bottom */
    border-radius: 4px;
  }

  .envelope.opening .envelope-inside {
    opacity: 1;
    transition-delay: 1s;
    height: 10%;
  }

  .envelope.open .envelope-inside {
    animation: pullOutCard 2.5s forwards;
    z-index: 4;
  }

  @keyframes pullOutCard {
    0% {
      height: 10%;
      bottom: 50%;
      opacity: 1;
      width: 95%;
      z-index: 4;
    }
    50% {
      height: 85%;
      bottom: 50%;
      opacity: 1;
      width: 95%;
      z-index: 4;
    }
    70% {
      height: 85%;
      bottom: 50%;
      opacity: 1;
      width: 95%;
      z-index: 4;
    }
    100% {
      height: 180%;
      bottom: 50%;
      opacity: 1;
      width: 95%;
      z-index: 4;
    }
  }

  .envelope-content-preview {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    opacity: 0;
    transition: opacity 0.5s ease;
    overflow: hidden;
  }

  .envelope.opening .envelope-content-preview {
    opacity: 1;
    transition-delay: 1s;
  }

  .envelope.open .envelope-content-preview {
    animation: fadeInContent 2.5s forwards;
  }

  @keyframes fadeInContent {
    0% {
      opacity: 1;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }

  .seal-content {
    color: #FFF8F0;
    font-family: 'Better Saturday Personal Use', cursive;
    font-size: 2.2rem;
    text-align: center;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.6);
    position: relative;
    letter-spacing: 1px;
    -webkit-text-stroke: 0.5px rgba(0, 0, 0, 0.3);
    text-shadow: 
      0 1px 0 rgba(255, 255, 255, 0.4),
      0 -1px 0 rgba(0, 0, 0, 0.7);
      display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
  }

  .seal-logo {
    width: 95%;
    height: auto;
    object-fit: contain;
    filter: brightness(0) invert(1); 
  }

  .seal-content::before {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    background-image: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h40v40H0V0zm20 20a10 10 0 1 0 0-20 10 10 0 0 0 0 20zm0 0a10 10 0 1 1 0 20 10 10 0 0 1 0-20z' fill='%23FFFFFF' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
    z-index: -1;
    opacity: 0.3;
    pointer-events: none;
  }

  /* Animación de pulso para el sello */
  .envelope-seal.pulse {
    animation: pulseSeal 4s ease infinite;
  }

  .envelope-seal:hover {
    animation: pulseSealHover 1s ease;
    transform: translate(-50%, -50%) scale(1.08) rotate(3deg);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.5), inset 0 2px 8px rgba(255, 255, 255, 0.3);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }


  @keyframes pulseSealHoverOut {
    0% { transform: translate(-50%, -50%) scale(1.08) rotate(3deg); box-shadow: 0 6px 15px rgba(0, 0, 0, 0.5), inset 0 2px 8px rgba(255, 255, 255, 0.3); }
    100% { transform: translate(-50%, -50%) scale(1) rotate(0deg); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), inset 0 2px 5px rgba(255, 255, 255, 0.2); }
  }

  @keyframes pulseSealHover {
    0% { transform: translate(-50%, -50%) scale(1) rotate(0deg); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), inset 0 2px 5px rgba(255, 255, 255, 0.2); }
    100% { transform: translate(-50%, -50%) scale(1.08) rotate(3deg); box-shadow: 0 6px 15px rgba(0, 0, 0, 0.5), inset 0 2px 8px rgba(255, 255, 255, 0.3); }
  }

  @keyframes pulseSeal {
    0% { transform: translate(-50%, -50%) scale(1) rotate(0deg); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), inset 0 2px 5px rgba(255, 255, 255, 0.2); }
    15% { transform: translate(-50%, -50%) scale(1.08) rotate(3deg); box-shadow: 0 6px 15px rgba(0, 0, 0, 0.5), inset 0 2px 8px rgba(255, 255, 255, 0.3); }
    30% { transform: translate(-50%, -50%) scale(1) rotate(0deg); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), inset 0 2px 5px rgba(255, 255, 255, 0.2); }
    100% { transform: translate(-50%, -50%) scale(1) rotate(0deg); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4), inset 0 2px 5px rgba(255, 255, 255, 0.2); }
  }

  .envelope-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    width: 90%;
    z-index: 2;
  }

  .envelope-content h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--text-color);
  }

  .envelope-content p {
    font-size: 1.2rem;
    color: var(--text-color);
  }

  .invitation-content {
      display: none;
      opacity: 0;
      position: static;
      width: 100%;
      background-color: var(--background-color);
      min-height: 100vh;
      transform-origin: center top;
      box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
      overflow-x: hidden;
    }
  
    /* Efecto de papel */
    .paper-effect {
      animation: paperWave 1.5s ease-out forwards;
      background-color: #F9F9F9;
      background-image: 
        linear-gradient(90deg, rgba(212, 185, 150, 0.05) 0px, rgba(212, 185, 150, 0.05) 1px, transparent 1px, transparent 30px),
        linear-gradient(rgba(212, 185, 150, 0.05) 0px, rgba(212, 185, 150, 0.05) 1px, transparent 1px, transparent 30px);
      background-size: 30px 30px;
    }
  
    /* Decoración de esquinas para el papel */
    .invitation-content::after {
      content: '';
      position: absolute;
      top: 20px;
      left: 20px;
      right: 20px;
      bottom: 20px;
      border: 1px solid rgba(169, 183, 198, 0.2);
      pointer-events: none;
      z-index: -1;
    }
  
    @keyframes paperWave {
      0% {
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
        border-radius: 0;
      }
      30% {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        border-radius: 5px 5px 0 0;
      }
      70% {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        border-radius: 2px 2px 0 0;
      }
      100% {
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        border-radius: 0;
      }
    }
  
    /* Efecto de textura de papel */
    .invitation-content::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent),
        url("/images/rose-draw.svg"),
        url("/images/rose-draw.svg");
      background-size: 
        110px 110px,
        70px 70px;
      background-position: 
        50% 20%,
        20% 80%;
      background-repeat: space;
      pointer-events: none;
      z-index: -1;
      opacity: 0.5;
    }
  
    /* Animación para los elementos internos con efecto de aparición escalonada */
    .invitation-content > * {
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.5s ease, transform 0.5s ease;
      transition-delay: calc(var(--delay, 0) * 0.15s + 0.5s);
    }
  
    .paper-effect > * {
      opacity: 1;
      transform: translateY(0);
    }

  .hidden {
    display: none !important;
    opacity: 0;
    visibility: hidden;
  }

  /* Original styles */
  .section {
    height: 100vh;
    scroll-snap-align: start;
    padding: 1rem 2rem 1rem 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    /*overflow-x: hidden;*/
  }

  .fade-in {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeIn 1s ease forwards;
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .button {
    background-color: var(--primary-color);
    color: var(--text-color);
    padding: 1rem 2rem;
    border: none;
    border-radius: 25px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    text-decoration: none;
  }

  .button:hover {
    background-color: var(--secondary-color);
    color: white;
  }
  
  main {
    scroll-snap-type: y proximity;
    height: 100vh;
    overflow-y: scroll;
    scroll-behavior: smooth;
    overflow-x: hidden;
  }
</style>
